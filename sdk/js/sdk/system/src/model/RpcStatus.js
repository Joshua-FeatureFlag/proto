/*
 * FeatureFlag
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {ProtobufAny} from './ProtobufAny';

/**
 * The RpcStatus model module.
 * @module model/RpcStatus
 * @version 1.0
 */
export class RpcStatus {
  /**
   * Constructs a new <code>RpcStatus</code>.
   * The &#x60;Status&#x60; type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each &#x60;Status&#x60; message contains three pieces of data: error code, error message, and error details.  You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
   * @alias module:model/RpcStatus
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>RpcStatus</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RpcStatus} obj Optional instance to populate.
   * @return {module:model/RpcStatus} The populated <code>RpcStatus</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new RpcStatus();
      if (data.hasOwnProperty('code'))
        obj.code = ApiClient.convertToType(data['code'], 'Number');
      if (data.hasOwnProperty('message'))
        obj.message = ApiClient.convertToType(data['message'], 'String');
      if (data.hasOwnProperty('details'))
        obj.details = ApiClient.convertToType(data['details'], [ProtobufAny]);
    }
    return obj;
  }
}

/**
 * The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
 * @member {Number} code
 */
RpcStatus.prototype.code = undefined;

/**
 * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
 * @member {String} message
 */
RpcStatus.prototype.message = undefined;

/**
 * A list of messages that carry the error details.  There is a common set of message types for APIs to use.
 * @member {Array.<module:model/ProtobufAny>} details
 */
RpcStatus.prototype.details = undefined;

